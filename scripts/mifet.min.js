Promise.prototype.t=Promise.prototype.then,Promise.prototype.c=Promise.prototype.catch,Promise.prototype.f=Promise.prototype.finally;let defaultOptions={headers:{"Content-Type":"application/json"}};async function request(t,e="GET",o=null,r={},n=5e3,p=3){let s=new AbortController,a=s.signal,l={headers:{"Content-Type":"application/json"},...r,method:e,body:o?JSON.stringify(o):null,signal:a},i=setTimeout(()=>s.abort(),n);for(let u=0;u<p;u++)try{let $=await fetch(t,{...l,signal:a});if(clearTimeout(i),!$.ok)throw Error(`HTTP error! status: ${$.status}`);return await $.json()}catch(c){if(clearTimeout(i),"AbortError"===c.name)throw Error("Request timed out");if(u<p-1)console.warn(`Retrying... attempt ${u+1}`);else throw console.error("Fetch error:",c),c}}export const get=(t,e={},o=3,r=5e3)=>request(t,"GET",null,e,r,o);export const post=(t,e,o={},r=3,n=5e3)=>request(t,"POST",e,o,n,r);export const put=(t,e,o={},r=3,n=5e3)=>request(t,"PUT",e,o,n,r);export const del=(t,e={},o=3,r=5e3)=>request(t,"DELETE",null,e,r,o);
